# Generated by Django 4.2.20 on 2025-05-25 19:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0014_remove_recommended_parts_from_seasonalstage'),
    ]

    operations = [
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('plant_sequence_number', models.PositiveIntegerField(blank=True, db_index=True, null=True)),
                ('status', models.CharField(choices=[('completed', 'Completed')], db_index=True, default='completed', max_length=10)),
            ],
            options={
                'verbose_name': 'Observation Point',
                'verbose_name_plural': 'Observation Points',
                'ordering': ['observation_time'],
            },
        ),
        migrations.CreateModel(
            name='SurveySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('abandoned', 'Abandoned')], db_index=True, default='not_started', max_length=20)),
                ('target_plants_surveyed', models.PositiveIntegerField(blank=True, null=True)),
                ('session_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
            ],
            options={
                'verbose_name': 'Survey Session',
                'verbose_name_plural': 'Survey Sessions',
                'ordering': ['-start_time'],
            },
        ),
        migrations.RemoveField(
            model_name='boundarymappingtoken',
            name='farm',
        ),
        migrations.RemoveField(
            model_name='surveillancerecord',
            name='diseases_found',
        ),
        migrations.RemoveField(
            model_name='surveillancerecord',
            name='farm',
        ),
        migrations.RemoveField(
            model_name='surveillancerecord',
            name='performed_by',
        ),
        migrations.RemoveField(
            model_name='surveillancerecord',
            name='pests_found',
        ),
        migrations.RemoveField(
            model_name='surveillancerecord',
            name='plant_parts_checked',
        ),
        migrations.AlterModelOptions(
            name='farm',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='plantpart',
            options={'ordering': ['name'], 'verbose_name': 'Plant Part', 'verbose_name_plural': 'Plant Parts'},
        ),
        migrations.AlterModelOptions(
            name='planttype',
            options={'ordering': ['name'], 'verbose_name': 'Plant Type', 'verbose_name_plural': 'Plant Types'},
        ),
        migrations.AlterModelOptions(
            name='surveillancecalculation',
            options={'ordering': ['-date_created'], 'verbose_name': 'Surveillance Calculation', 'verbose_name_plural': 'Surveillance Calculations'},
        ),
        migrations.RemoveField(
            model_name='farm',
            name='distribution_pattern',
        ),
        migrations.RemoveField(
            model_name='farm',
            name='has_exact_address',
        ),
        migrations.RemoveField(
            model_name='farm',
            name='location_description',
        ),
        migrations.AlterField(
            model_name='farm',
            name='boundary',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='farm',
            name='formatted_address',
            field=models.CharField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='farm',
            name='geoscape_address_id',
            field=models.CharField(blank=True, db_index=True, max_length=50, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='farm',
            name='name',
            field=models.CharField(db_index=True, max_length=100),
        ),
        migrations.AlterField(
            model_name='farm',
            name='size_hectares',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
        ),
        migrations.AlterField(
            model_name='farm',
            name='stocking_rate',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='plantpart',
            name='name',
            field=models.CharField(db_index=True, max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name='planttype',
            name='name',
            field=models.CharField(db_index=True, max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='seasonalstage',
            name='active_diseases',
            field=models.ManyToManyField(blank=True, related_name='seasonal_stages', to='core.disease'),
        ),
        migrations.AlterField(
            model_name='seasonalstage',
            name='active_pests',
            field=models.ManyToManyField(blank=True, related_name='seasonal_stages', to='core.pest'),
        ),
        migrations.AlterField(
            model_name='seasonalstage',
            name='months',
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name='seasonalstage',
            name='name',
            field=models.CharField(max_length=100, unique=True),
        ),
        migrations.AlterField(
            model_name='seasonalstage',
            name='prevalence_p',
            field=models.DecimalField(decimal_places=3, max_digits=4),
        ),
        migrations.AlterField(
            model_name='surveillancecalculation',
            name='date_created',
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name='surveillancecalculation',
            name='is_current',
            field=models.BooleanField(db_index=True, default=True),
        ),
        migrations.AlterField(
            model_name='surveillancecalculation',
            name='margin_of_error',
            field=models.DecimalField(decimal_places=2, default=5.0, max_digits=5),
        ),
        migrations.AlterField(
            model_name='surveillancecalculation',
            name='percentage_of_total',
            field=models.DecimalField(decimal_places=2, max_digits=5),
        ),
        migrations.AlterField(
            model_name='surveillancecalculation',
            name='population_size',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='surveillancecalculation',
            name='prevalence_percent',
            field=models.DecimalField(decimal_places=2, max_digits=5),
        ),
        migrations.AlterField(
            model_name='surveillancecalculation',
            name='required_plants',
            field=models.IntegerField(),
        ),
        migrations.AlterField(
            model_name='surveillancecalculation',
            name='season',
            field=models.CharField(choices=[('Wet', 'Wet Season'), ('Dry', 'Dry Season'), ('Flowering', 'Flowering Period')], db_index=True, max_length=20),
        ),
        migrations.AlterField(
            model_name='surveillancecalculation',
            name='survey_frequency',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name='farm',
            index=models.Index(fields=['name'], name='core_farm_name_30a09f_idx'),
        ),
        migrations.AddIndex(
            model_name='farm',
            index=models.Index(fields=['owner'], name='core_farm_owner_i_8007c0_idx'),
        ),
        migrations.AddIndex(
            model_name='farm',
            index=models.Index(fields=['plant_type'], name='core_farm_plant_t_306009_idx'),
        ),
        migrations.AddIndex(
            model_name='farm',
            index=models.Index(fields=['region'], name='core_farm_region__6be8dc_idx'),
        ),
        migrations.AddIndex(
            model_name='farm',
            index=models.Index(fields=['geoscape_address_id'], name='core_farm_geoscap_38c43f_idx'),
        ),
        migrations.AddIndex(
            model_name='surveillancecalculation',
            index=models.Index(fields=['farm', '-date_created'], name='core_survei_farm_id_ca73a3_idx'),
        ),
        migrations.AddIndex(
            model_name='surveillancecalculation',
            index=models.Index(fields=['farm', 'is_current'], name='core_survei_farm_id_c5557f_idx'),
        ),
        migrations.DeleteModel(
            name='BoundaryMappingToken',
        ),
        migrations.DeleteModel(
            name='SurveillanceRecord',
        ),
        migrations.AddField(
            model_name='surveysession',
            name='farm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_sessions', to='core.farm'),
        ),
        migrations.AddField(
            model_name='surveysession',
            name='surveyor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='observation',
            name='diseases_observed',
            field=models.ManyToManyField(blank=True, related_name='observations', to='core.disease'),
        ),
        migrations.AddField(
            model_name='observation',
            name='pests_observed',
            field=models.ManyToManyField(blank=True, related_name='observations', to='core.pest'),
        ),
        migrations.AddField(
            model_name='observation',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observations', to='core.surveysession'),
        ),
        migrations.AddIndex(
            model_name='surveysession',
            index=models.Index(fields=['status'], name='core_survey_status_15820b_idx'),
        ),
        migrations.AddIndex(
            model_name='surveysession',
            index=models.Index(fields=['farm', 'status'], name='core_survey_farm_id_5ec94a_idx'),
        ),
        migrations.AddIndex(
            model_name='surveysession',
            index=models.Index(fields=['surveyor', '-start_time'], name='core_survey_surveyo_f2681f_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['status'], name='core_observ_status_78fede_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['session', 'status'], name='core_observ_session_f87950_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['observation_time'], name='core_observ_observa_4a8918_idx'),
        ),
        migrations.AddIndex(
            model_name='observation',
            index=models.Index(fields=['plant_sequence_number'], name='core_observ_plant_s_4f955e_idx'),
        ),
    ]
